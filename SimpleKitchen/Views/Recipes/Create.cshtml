@model SimpleKitchen.Models.ViewModels.RecipesCreateViewModel
<link href="~/Content/RecipesCreate.css" rel="stylesheet" />

<h2>Create Recipe</h2>

<div class="row">
    @using (Html.BeginForm("Create", "Recipes", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <p>* = Required</p>
            <div class="col-sm-6 input-col-left">
                <div class="form-group">
                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "control-label col-xs-6" })
                    </div>
                    <div class="col-md-10 col-centered">
                        <div class="col-sm-4"></div>
                        <div class="checkbox col-sm-2">
                            @Html.EditorFor(model => model.IsPublic)
                            @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-sm-6"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UploadedFile, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        <input type="file" name="UploadedFile" asp-for="UploadedFile" />
                        @Html.ValidationMessageFor(model => model.UploadedFile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, 10, 50, htmlAttributes: new { placeholder = "Max: 200 characters", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CookBookName, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CookBookName, new SelectList(ViewBag.CookBookNames),
                    new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CookBookName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6 input-col-right">
                <div class="form-group">
                    @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Ingredients, 10, 50, htmlAttributes: new { placeholder = "Enter each ingredient on a separate line.", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Instructions, 10, 50, htmlAttributes: new { placeholder = "Enter each instruction on a separate line.", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="form-group">
                <div class="col-xs-5"></div>
                <div class="col-xs-2">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div class="col-xs-5"></div>
            </div>
        </div>
    }
</div>

<div>
    @Html.ActionLink("Back to My CookBooks", "Index", "CookBooks")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
