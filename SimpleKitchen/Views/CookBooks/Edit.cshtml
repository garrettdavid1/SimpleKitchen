@model SimpleKitchen.Models.ViewModels.CookBooksEditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CookBook</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(o => o.OwnerId);
        @Html.HiddenFor(model => model.CookBookId)

        <div class="form-group">
            @Html.LabelFor(model => model.CookBookName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookBookName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookBookName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookBookDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookBookDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookBookDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recipes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var recipe in Model.Recipes)
                {
                    <div>
                        @recipe.RecipeName
                        @Html.ActionLink("Edit", "Edit", "Recipes", new { id = recipe.RecipeId }, new { id = recipe.RecipeId }) |
                        @Html.ActionLink("Details", "Details", "Recipes", new { id = recipe.RecipeId }, new { id = recipe.RecipeId }) |
                        @Html.ActionLink("Remove", "RemoveRecipe", "CookBooks",
                            new { cookBookId = Model.CookBookId, recipeId = recipe.RecipeId },
                            new { id = recipe.RecipeId })
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
